{
  "contractName": "Token",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/manan/Desktop/CollegeStuff/Sem7/Blockchain/Project/addressTracker/contracts/Token.sol\":\"Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/manan/Desktop/CollegeStuff/Sem7/Blockchain/Project/addressTracker/contracts/Token.sol\":{\"keccak256\":\"0x092ee8ee068a378ba5b56cb361a91061d90ee0833f2300184ed4753bc1488cd0\",\"urls\":[\"bzz-raw://137bd6beb2862479295b852feb7f60255efd0dc3fd9d0fcc1048eea56b5d2ad1\",\"dweb:/ipfs/QmSYrVvNJqKdTzESsE863GGmRjVpU925ah2PsYtbt4Svtc\"]},\"/home/manan/Desktop/CollegeStuff/Sem7/Blockchain/Project/addressTracker/contracts/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"/home/manan/Desktop/CollegeStuff/Sem7/Blockchain/Project/addressTracker/contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"/home/manan/Desktop/CollegeStuff/Sem7/Blockchain/Project/addressTracker/contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb67a9f465cf543eb683ed58706ccfade159d0e25e2dc7a22dfaffc9d8a2294cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7072a001f1d3df0b1605e2758743e188df21bd5701ab4fe4a554726a55cf1655\",\"dweb:/ipfs/QmTPgps5AapfKhnuDBBacdFLX1qf2DfghQ9zwDLCTa2ALL\"]},\"/home/manan/Desktop/CollegeStuff/Sem7/Blockchain/Project/addressTracker/contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600060405161001f906100f9565b808060200180602001838103835260048152602001807f484f484f00000000000000000000000000000000000000000000000000000000815250602001838103825260048152602001807f484f484f0000000000000000000000000000000000000000000000000000000081525060200192505050604051809103906000f0801580156100b0573d6000803e3d6000fd5b509050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610106565b61168a806101d283390190565b60be806101146000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806321df0da714602d575b600080fd5b6033605f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690509056fea26469706673582212207894159ccd8a486f06496f54df67b343b88dc716f4df441836ce10f21f50473564736f6c634300060c003360806040523480156200001157600080fd5b506040516200168a3803806200168a833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508160039080519060200190620001cd9291906200020b565b508060049080519060200190620001e69291906200020b565b506012600560006101000a81548160ff021916908360ff1602179055505050620002b1565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024e57805160ff19168380011785556200027f565b828001600101855582156200027f579182015b828111156200027e57825182559160200191906001019062000261565b5b5090506200028e919062000292565b5090565b5b80821115620002ad57600081600090555060010162000293565b5090565b6113c980620002c16000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633428fda41161008c57806395d89b411161006657806395d89b411461040c578063a457c2d71461048f578063a9059cbb146104f3578063dd62ed3e14610557576100cf565b80633428fda4146102cc578063395093511461035057806370a08231146103b4576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bb5780631e7ef09f146101d957806323b872dd14610227578063313ce567146102ab575b600080fd5b6100dc6105cf565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610671565b60405180821515815260200191505060405180910390f35b6101c361068f565b6040518082815260200191505060405180910390f35b610225600480360360408110156101ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610699565b005b6102936004803603606081101561023d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106a7565b60405180821515815260200191505060405180910390f35b6102b3610780565b604051808260ff16815260200191505060405180910390f35b610338600480360360608110156102e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610797565b60405180821515815260200191505060405180910390f35b61039c6004803603604081101561036657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107af565b60405180821515815260200191505060405180910390f35b6103f6600480360360208110156103ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610862565b6040518082815260200191505060405180910390f35b6104146108aa565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610454578082015181840152602081019050610439565b50505050905090810190601f1680156104815780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104db600480360360408110156104a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061094c565b60405180821515815260200191505060405180910390f35b61053f6004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a19565b60405180821515815260200191505060405180910390f35b6105b96004803603604081101561056d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a37565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106675780601f1061063c57610100808354040283529160200191610667565b820191906000526020600020905b81548152906001019060200180831161064a57829003601f168201915b5050505050905090565b600061068561067e610abe565b8484610ac6565b6001905092915050565b6000600254905090565b6106a38282610cbd565b5050565b60006106b4848484610e84565b610775846106c0610abe565b610770856040518060600160405280602881526020016112fe60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610726610abe565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111459092919063ffffffff16565b610ac6565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006107a4848484610e84565b600190509392505050565b60006108586107bc610abe565b8461085385600160006107cd610abe565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461120590919063ffffffff16565b610ac6565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109425780601f1061091757610100808354040283529160200191610942565b820191906000526020600020905b81548152906001019060200180831161092557829003601f168201915b5050505050905090565b6000610a0f610959610abe565b84610a0a8560405180606001604052806025815260200161136f6025913960016000610983610abe565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111459092919063ffffffff16565b610ac6565b6001905092915050565b6000610a2d610a26610abe565b8484610e84565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061134b6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bd2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806112b66022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d60576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b610d6c6000838361128d565b610d818160025461120590919063ffffffff16565b600281905550610dd8816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461120590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f0a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806113266025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f90576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806112936023913960400191505060405180910390fd5b610f9b83838361128d565b611006816040518060600160405280602681526020016112d8602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111459092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611099816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461120590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906111f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156111b757808201518184015260208101905061119c565b50505050905090810190601f1680156111e45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015611283576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220e1c3b3842df5d89d2e6f4777b4ef421db631721cb3233f7aadb742609212382964736f6c634300060c0033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c806321df0da714602d575b600080fd5b6033605f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690509056fea26469706673582212207894159ccd8a486f06496f54df67b343b88dc716f4df441836ce10f21f50473564736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "921:1114:3:-:0;;;1126:92;;;;;;;;;;1157:7;1167:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1157:35;;1210:1;1202:5;;:9;;;;;;;;;;;;;;;;;;1126:92;921:1114;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "921:1114:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1224:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1260:5;1284;;;;;;;;;;;1277:12;;1224:72;:::o",
  "source": "pragma solidity ^0.6.0;\n\n// Import and then rename the OpenZeppelin contract stubs for ERC20 and ERC721 contract\n// import \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\";\n// import {ERC721Token as StandardERC721} from \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC721/ERC721Token.sol\";\nimport \"./contracts/token/ERC20/ERC20.sol\";\n\n// contract ERC20Token is ERC20 {\n//     string public override name;\n//     string public override symbol;\n//     uint8 public override decimals;\n\n//     constructor(string memory _name, string memory _symbol, uint8 _decimals) public {\n//         name = _name;\n//         symbol = _symbol;\n//         decimals = _decimals;\n//     }\n// }\n\n// contract ERC721Token is StandardERC721 {\n//     constructor(string _name, string _symbol)\n//     public\n//     StandardERC721(_name, _symbol)\n//     {\n//     }\n// }\n\ncontract Token {\n    /* @dev Creates a new ERC20Token with the given name, symbol and number of decimals.\n        Logs an event with the address of the token and its parameters\n    */\n    ERC20 token;\n    constructor() public {\n        ERC20 T = new ERC20(\"HOHO\", \"HOHO\");\n        token = T;\n    }\n\n    function getToken() public returns (ERC20) {\n        return token;\n    }\n    // function newERC20(string memory _name, string memory _symbol, uint8 _decimals) public {\n    //     emit ERC20Created(new ERC20Token(_name, _symbol, _decimals), _name, _symbol, _decimals);\n    // }\n\n    /* @dev Creates a new ERC721Token with the given name and symbol.            \n        Logs an event with the address of the token and its parameters               \n    */\n    // function newERC721(string _name, string _symbol) public {\n    //     emit ERC721Created(new ERC721Token(_name, _symbol), _name, _symbol);\n    // }\n\n    // event ERC20Created(ERC20Token indexed tokenAddress, string indexed name, string indexed symbol, uint8 decimals);\n    // event ERC721Created(ERC721Token tokenAddress, string name, string symbol);\n}",
  "sourcePath": "/home/manan/Desktop/CollegeStuff/Sem7/Blockchain/Project/addressTracker/contracts/Token.sol",
  "ast": {
    "absolutePath": "/home/manan/Desktop/CollegeStuff/Sem7/Blockchain/Project/addressTracker/contracts/Token.sol",
    "exportedSymbols": {
      "Token": [
        511
      ]
    },
    "id": 512,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 483,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/home/manan/Desktop/CollegeStuff/Sem7/Blockchain/Project/addressTracker/contracts/contracts/token/ERC20/ERC20.sol",
        "file": "./contracts/token/ERC20/ERC20.sol",
        "id": 484,
        "nodeType": "ImportDirective",
        "scope": 512,
        "sourceUnit": 11767,
        "src": "368:43:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          11766
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 511,
        "linearizedBaseContracts": [
          511
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 486,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 511,
            "src": "1109:11:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$11766",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 485,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11766,
              "src": "1109:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$11766",
                "typeString": "contract ERC20"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "1147:71:3",
              "statements": [
                {
                  "assignments": [
                    490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 490,
                      "mutability": "mutable",
                      "name": "T",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 501,
                      "src": "1157:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$11766",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 489,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 11766,
                        "src": "1157:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$11766",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 496,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "484f484f",
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1177:6:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8101a3dba5a0e01f85a252fb7e07d6c1b75ffe770e5e5d7fa8ea9e68a543ab7a",
                          "typeString": "literal_string \"HOHO\""
                        },
                        "value": "HOHO"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "484f484f",
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1185:6:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8101a3dba5a0e01f85a252fb7e07d6c1b75ffe770e5e5d7fa8ea9e68a543ab7a",
                          "typeString": "literal_string \"HOHO\""
                        },
                        "value": "HOHO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8101a3dba5a0e01f85a252fb7e07d6c1b75ffe770e5e5d7fa8ea9e68a543ab7a",
                          "typeString": "literal_string \"HOHO\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8101a3dba5a0e01f85a252fb7e07d6c1b75ffe770e5e5d7fa8ea9e68a543ab7a",
                          "typeString": "literal_string \"HOHO\""
                        }
                      ],
                      "id": 492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1167:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20_$11766_$",
                        "typeString": "function (string memory,string memory) returns (contract ERC20)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 491,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 11766,
                        "src": "1171:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$11766",
                          "typeString": "contract ERC20"
                        }
                      }
                    },
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1167:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$11766",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1157:35:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 497,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 486,
                      "src": "1202:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$11766",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 498,
                      "name": "T",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 490,
                      "src": "1210:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$11766",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1202:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$11766",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "1202:9:3"
                }
              ]
            },
            "documentation": null,
            "id": 502,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1137:2:3"
            },
            "returnParameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1147:0:3"
            },
            "scope": 511,
            "src": "1126:92:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 509,
              "nodeType": "Block",
              "src": "1267:29:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 507,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 486,
                    "src": "1284:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$11766",
                      "typeString": "contract ERC20"
                    }
                  },
                  "functionReturnParameters": 506,
                  "id": 508,
                  "nodeType": "Return",
                  "src": "1277:12:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "21df0da7",
            "id": 510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1241:2:3"
            },
            "returnParameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 505,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 510,
                  "src": "1260:5:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$11766",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 504,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11766,
                    "src": "1260:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$11766",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1259:7:3"
            },
            "scope": 511,
            "src": "1224:72:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 512,
        "src": "921:1114:3"
      }
    ],
    "src": "0:2035:3"
  },
  "legacyAST": {
    "absolutePath": "/home/manan/Desktop/CollegeStuff/Sem7/Blockchain/Project/addressTracker/contracts/Token.sol",
    "exportedSymbols": {
      "Token": [
        511
      ]
    },
    "id": 512,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 483,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/home/manan/Desktop/CollegeStuff/Sem7/Blockchain/Project/addressTracker/contracts/contracts/token/ERC20/ERC20.sol",
        "file": "./contracts/token/ERC20/ERC20.sol",
        "id": 484,
        "nodeType": "ImportDirective",
        "scope": 512,
        "sourceUnit": 11767,
        "src": "368:43:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          11766
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 511,
        "linearizedBaseContracts": [
          511
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 486,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 511,
            "src": "1109:11:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$11766",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 485,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11766,
              "src": "1109:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$11766",
                "typeString": "contract ERC20"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "1147:71:3",
              "statements": [
                {
                  "assignments": [
                    490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 490,
                      "mutability": "mutable",
                      "name": "T",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 501,
                      "src": "1157:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$11766",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 489,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 11766,
                        "src": "1157:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$11766",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 496,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "484f484f",
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1177:6:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8101a3dba5a0e01f85a252fb7e07d6c1b75ffe770e5e5d7fa8ea9e68a543ab7a",
                          "typeString": "literal_string \"HOHO\""
                        },
                        "value": "HOHO"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "484f484f",
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1185:6:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8101a3dba5a0e01f85a252fb7e07d6c1b75ffe770e5e5d7fa8ea9e68a543ab7a",
                          "typeString": "literal_string \"HOHO\""
                        },
                        "value": "HOHO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8101a3dba5a0e01f85a252fb7e07d6c1b75ffe770e5e5d7fa8ea9e68a543ab7a",
                          "typeString": "literal_string \"HOHO\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8101a3dba5a0e01f85a252fb7e07d6c1b75ffe770e5e5d7fa8ea9e68a543ab7a",
                          "typeString": "literal_string \"HOHO\""
                        }
                      ],
                      "id": 492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1167:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20_$11766_$",
                        "typeString": "function (string memory,string memory) returns (contract ERC20)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 491,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 11766,
                        "src": "1171:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$11766",
                          "typeString": "contract ERC20"
                        }
                      }
                    },
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1167:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$11766",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1157:35:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 497,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 486,
                      "src": "1202:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$11766",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 498,
                      "name": "T",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 490,
                      "src": "1210:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$11766",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1202:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$11766",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "1202:9:3"
                }
              ]
            },
            "documentation": null,
            "id": 502,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1137:2:3"
            },
            "returnParameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1147:0:3"
            },
            "scope": 511,
            "src": "1126:92:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 509,
              "nodeType": "Block",
              "src": "1267:29:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 507,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 486,
                    "src": "1284:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$11766",
                      "typeString": "contract ERC20"
                    }
                  },
                  "functionReturnParameters": 506,
                  "id": 508,
                  "nodeType": "Return",
                  "src": "1277:12:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "21df0da7",
            "id": 510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1241:2:3"
            },
            "returnParameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 505,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 510,
                  "src": "1260:5:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$11766",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 504,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11766,
                    "src": "1260:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$11766",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1259:7:3"
            },
            "scope": 511,
            "src": "1224:72:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 512,
        "src": "921:1114:3"
      }
    ],
    "src": "0:2035:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x892cd98254B4f89Db814bFF02B5E3E5D91f30338",
      "transactionHash": "0x8fa655afe27d8af67e70c82a8a4596eea2f2e33c3649cbac9ba083547d0eefbf"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-11-23T12:04:11.599Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}